<Window x:Class="TAlex.Testcheck.Tester.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:TAlex.Testcheck.Tester.Controls"
    xmlns:convs="clr-namespace:TAlex.Testcheck.Tester.Converters"
    xmlns:beh="clr-namespace:TAlex.Testcheck.Tester.Behaviours"
    Title="Testcheck Tester" MinHeight="400" MinWidth="400" Height="600" Width="800" Topmost="True" WindowStartupLocation="CenterScreen"
    Loaded="Window_Loaded">
    
    <Window.Resources>
        <convs:QuestionToTesterControlConverter x:Key="QuestionToTesterControlConverter" />
        <convs:QuestionDescriptionToHtmlConverter x:Key="QuestionDescriptionToHtmlConverter" />
        <convs:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />
        <convs:TimeLeftToBrushConverter x:Key="TimeLeftToBrushConverter" />
        
        <SolidColorBrush x:Key="TextBrush" Color="DimGray" />
        
        <LinearGradientBrush x:Key="ButtonBgBrush" EndPoint="0,1">
            <GradientStop Color="#fff3f3f3" Offset="0" />
            <GradientStop Color="#ffebebeb" Offset="0.499" />
            <GradientStop Color="#ffdddddd" Offset="0.5" />
            <GradientStop Color="#ffcecece" Offset="1" />
        </LinearGradientBrush>
    </Window.Resources>
    
    <Window.InputBindings>
        <KeyBinding Key="Left" Command="{Binding MovePreviousCommand}" />
        <KeyBinding Key="Right" Command="{Binding MoveNextCommand}" />
    </Window.InputBindings>
    
    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="150" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="22" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>

        <Menu Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="#ffeaeaea">
            <Menu.Background>
                <LinearGradientBrush EndPoint="0,1">
                    <GradientStop Color="#fff5f5f5" Offset="0" />
                    <GradientStop Color="#ffe0e0e0" Offset="0.5" />
                    <GradientStop Color="WhiteSmoke" Offset="1" />
                </LinearGradientBrush>
            </Menu.Background>
            
            <MenuItem Header="_File">
                <MenuItem Header="E_xit" InputGestureText="Alt+F4" Click="exitMenuItem_Click" />
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="80" Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition MinHeight="50" Height="150" />
            </Grid.RowDefinitions>
            
            <GridSplitter Grid.Row="1" ResizeDirection="Rows" HorizontalAlignment="Stretch">
                <GridSplitter.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="WhiteSmoke" Offset="0" />
                        <GradientStop Color="#d0d0d0" Offset="1" />
                    </LinearGradientBrush>
                </GridSplitter.Background>
            </GridSplitter>
            
            <Border Grid.Row="0" BorderBrush="Gray">
                <WebBrowser Grid.Row="0" beh:BrowserBehavior.Html="{Binding CurrentQuestion.Description, Converter={StaticResource QuestionDescriptionToHtmlConverter}}" PreviewKeyDown="questionWebBrowser_PreviewKeyDown" />
            </Border>

            <ScrollViewer Grid.Row="2" Background="White" Content="{Binding CurrentQuestion, Converter={StaticResource QuestionToTesterControlConverter}}" />
        </Grid>
        
        <Label Grid.Row="1" Grid.Column="1" Margin="35,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="{StaticResource TextBrush}">Time elapsed:</Label>
        <Label Grid.Row="1" Grid.Column="1" Margin="35,20,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"  Foreground="{StaticResource TextBrush}" Content="{Binding TimeElapsed, Converter={StaticResource TimeSpanToStringConverter}}" />

        <Label Grid.Row="1" Grid.Column="1" Margin="35,45,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="{StaticResource TextBrush}">Time left:</Label>
        <Label Grid.Row="1" Grid.Column="1" Margin="35,60,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Content="{Binding TimeLeft, Converter={StaticResource TimeSpanToStringConverter}}">
            <Label.Foreground>
                <MultiBinding Converter="{StaticResource TimeLeftToBrushConverter}">
                    <Binding Path="TimeLimit" />
                    <Binding Path="TimeLeft" />
                </MultiBinding>
            </Label.Foreground>
        </Label>
        
        <controls:TestProgressBar Grid.Row="1" Grid.Column="1" Margin="0,100,0,25" TotalPoints="{Binding TotalPoints}" ScoredPoints="{Binding ScoredPoints}" PossiblePoints="{Binding PossiblePoints}" />
               
        <!-- Control panel -->
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0,1">
                    <GradientStop Color="WhiteSmoke" Offset="0" />
                    <GradientStop Color="Silver" Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>

            <Grid Width="250" Margin="5">
                <Grid.Resources>
                    <Style x:Key="ControlButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="Padding" Value="1"/>
                        
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="MouseOverAnimation">
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(Color)" To="#ffc7c7ff" Duration="0:0:0.2" />
                                        </Storyboard>
                                        <Storyboard x:Key="MouseOutAnimation">
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(Color)" To="Silver" Duration="0:0:0.2" />
                                        </Storyboard>
                                        <Storyboard x:Key="MouseDownAnimation">
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(Color)" To="#ffc7c7ff" Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).(ScaleX)" To=".97" Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).(ScaleY)" To=".97" Duration="0:0:0.1" />
                                        </Storyboard>
                                        <Storyboard x:Key="MouseUpAnimation">
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(BorderBrush).(Color)" To="Silver" Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).(ScaleX)" To="1" Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).(ScaleY)" To="1" Duration="0:0:0.1" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>


                                    <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter.RenderTransform>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </ContentPresenter.RenderTransform>
                                            
                                        </ContentPresenter>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource MouseDownAnimation}" />
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource MouseUpAnimation}" />
                                            </Trigger.ExitActions>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ImageButtonStyle" TargetType="Image">
                        <Style.Resources>
                            <Storyboard x:Key="IsDisabledAnimation">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="IsEnabledAnimation">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </Style.Resources>

                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsDisabledAnimation}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsEnabledAnimation}" />
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Margin="0,5,10,5" Grid.Column="0" Background="{DynamicResource ButtonBgBrush}" BorderBrush="Silver" Focusable="False" ToolTip="Previous question" Style="{StaticResource ControlButtonStyle}" Command="{Binding MovePreviousCommand}">
                    <Image Source="..\Resources\Images\previous.png" Style="{StaticResource ImageButtonStyle}" />
                </Button>

                <Button Margin="10,0,10,0" Grid.Column="1" Background="{StaticResource ButtonBgBrush}" BorderBrush="Silver" Focusable="False" ToolTip="Accept answer" Style="{StaticResource ControlButtonStyle}" Command="{Binding AcceptCommand}">
                    <Image Source="..\Resources\Images\accept.png" Style="{StaticResource ImageButtonStyle}" />
                </Button>

                <Button Margin="10,5,0,5" Grid.Column="2" Background="{StaticResource ButtonBgBrush}" BorderBrush="Silver" Focusable="False" ToolTip="Next question" Style="{StaticResource ControlButtonStyle}" Command="{Binding MoveNextCommand}">
                    <Image Source="..\Resources\Images\forward.png" Style="{StaticResource ImageButtonStyle}" />
                </Button>
            </Grid>
        </Grid>

        <StatusBar Grid.Row="3" Grid.ColumnSpan="2">
            <StatusBar.Background>
                <LinearGradientBrush EndPoint="0,1">
                    <GradientStop Color="WhiteSmoke" Offset="0" />
                    <GradientStop Color="Silver" Offset="0.05" />
                    <GradientStop Color="WhiteSmoke" Offset="1" />
                </LinearGradientBrush>
            </StatusBar.Background>
            
            <StatusBarItem Content="Question" Foreground="{StaticResource TextBrush}" />

            <StatusBarItem Content="{Binding CurrentQuestionNumber, FallbackValue=0}" Foreground="{StaticResource TextBrush}" />
            <StatusBarItem Content="of" Foreground="{StaticResource TextBrush}" />
            <StatusBarItem Content="{Binding QuestionsCount, FallbackValue=0}" Foreground="{StaticResource TextBrush}" />
        </StatusBar>
    </Grid>
</Window>
